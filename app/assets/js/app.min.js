/*!
 * Coding101
 * Coding101 is a guide for people that want to learn how to code
 * https://github.com/devcenter-square/coding101
 * @author Devcenter
 * @version 0.0.1
 * Copyright 2016. MIT licensed.
 */
var config={apiKey:"AIzaSyA6mwwrGZLXTrPZcotadbPla7MfSNRyvU8",authDomain:"coding101-e7ef0.firebaseapp.com",databaseURL:"https://coding101-e7ef0.firebaseio.com",storageBucket:"coding101-e7ef0.appspot.com"};firebase.initializeApp(config);var TrackList=Vue.component("TrackList",{template:"#TrackList",data:function(){return{tracks:null}},watch:{$route:"fetchData"},created:function(){this.fetchData()},methods:{fetchData:function(){var t=this;firebase.database().ref("tracks").on("value",function(e){t.tracks=e.val()})}}}),Track=Vue.component("Track",{template:"#Track",data:function(){return{trackName:"",trackSlug:"",trackResource:"",trackResourceTwo:"",trackDetails:""}},methods:{trackSubmit:function(){var t=firebase.database().ref("tracks"),e=t.push(),a=this.trackName.replace(/\s+/g,"-").toLowerCase();e.set({name:this.trackName,slug:a,details:this.trackDetails,resources:[{link:this.trackResource},{linktwo:this.trackResourceTwo}]}),this.$router.push("/")}}}),QuestionList=Vue.component("QuestionList",{template:"#QuestionList"}),Question=Vue.component("Question",{template:"#Question"}),router=new VueRouter({routes:[{path:"/",redirect:"/tracks"},{path:"/tracks",component:TrackList},{path:"/tracks/:id",component:Track},{path:"/questions",component:QuestionList},{path:"/questions/:id",component:Question}]}),app=new Vue({router:router}).$mount("#app");
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJjb25maWciLCJhcGlLZXkiLCJhdXRoRG9tYWluIiwiZGF0YWJhc2VVUkwiLCJzdG9yYWdlQnVja2V0IiwiZmlyZWJhc2UiLCJpbml0aWFsaXplQXBwIiwiVHJhY2tMaXN0IiwiVnVlIiwiY29tcG9uZW50IiwidGVtcGxhdGUiLCJkYXRhIiwidHJhY2tzIiwid2F0Y2giLCIkcm91dGUiLCJjcmVhdGVkIiwidGhpcyIsImZldGNoRGF0YSIsIm1ldGhvZHMiLCIkdGhpcyIsImRhdGFiYXNlIiwicmVmIiwib24iLCJzbmFwc2hvdCIsInZhbCIsIlRyYWNrIiwidHJhY2tOYW1lIiwidHJhY2tTbHVnIiwidHJhY2tSZXNvdXJjZSIsInRyYWNrUmVzb3VyY2VUd28iLCJ0cmFja0RldGFpbHMiLCJ0cmFja1N1Ym1pdCIsIl90cmFja3MiLCJfbmV3VHJhY2siLCJwdXNoIiwicmVwbGFjZSIsInRvTG93ZXJDYXNlIiwic2V0IiwibmFtZSIsInNsdWciLCJkZXRhaWxzIiwicmVzb3VyY2VzIiwibGluayIsImxpbmt0d28iLCIkcm91dGVyIiwiUXVlc3Rpb25MaXN0IiwiUXVlc3Rpb24iLCJyb3V0ZXIiLCJWdWVSb3V0ZXIiLCJyb3V0ZXMiLCJwYXRoIiwicmVkaXJlY3QiLCJhcHAiLCIkbW91bnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBS0EsR0FBQUEsU0FDQUMsT0FBQSwwQ0FDQUMsV0FBQSxrQ0FDQUMsWUFBQSx5Q0FDQUMsY0FBQSw4QkFHQUMsVUFBQUMsY0FBQU4sT0FlQSxJQUFBTyxXQUFBQyxJQUFBQyxVQUFBLGFBQ0FDLFNBQUEsYUFDQUMsS0FBQSxXQUNBLE9BQ0FDLE9BQUEsT0FHQUMsT0FDQUMsT0FBQSxhQUVBQyxRQUFBLFdBQ0FDLEtBQUFDLGFBRUFDLFNBQ0FELFVBQUEsV0FDQSxHQUFBRSxHQUFBSCxJQUVBWCxVQUFBZSxXQUFBQyxJQUFBLFVBQUFDLEdBQUEsUUFBQSxTQUFBQyxHQUNBSixFQUFBUCxPQUFBVyxFQUFBQyxZQVFBQyxNQUFBakIsSUFBQUMsVUFBQSxTQUNBQyxTQUFBLFNBQ0FDLEtBQUEsV0FDQSxPQUNBZSxVQUFBLEdBQ0FDLFVBQUEsR0FDQUMsY0FBQSxHQUNBQyxpQkFBQSxHQUNBQyxhQUFBLEtBR0FaLFNBQ0FhLFlBQUEsV0FDQSxHQUFBQyxHQUFBM0IsU0FBQWUsV0FBQUMsSUFBQSxVQUNBWSxFQUFBRCxFQUFBRSxPQUVBUCxFQUFBWCxLQUFBVSxVQUFBUyxRQUFBLE9BQUEsS0FBQUMsYUFFQUgsR0FBQUksS0FDQUMsS0FBQXRCLEtBQUFVLFVBQ0FhLEtBQUFaLEVBQ0FhLFFBQUF4QixLQUFBYyxhQUNBVyxZQUVBQyxLQUFBMUIsS0FBQVksZ0JBSUFlLFFBQUEzQixLQUFBYSxxQkFLQWIsS0FBQTRCLFFBQUFWLEtBQUEsU0FPQVcsYUFBQXJDLElBQUFDLFVBQUEsZ0JBQ0FDLFNBQUEsa0JBR0FvQyxTQUFBdEMsSUFBQUMsVUFBQSxZQUNBQyxTQUFBLGNBS0FxQyxPQUFBLEdBQUFDLFlBQ0FDLFNBQ0FDLEtBQUEsSUFBQUMsU0FBQSxZQUNBRCxLQUFBLFVBQUF6QyxVQUFBRixZQUNBMkMsS0FBQSxjQUFBekMsVUFBQWdCLFFBQ0F5QixLQUFBLGFBQUF6QyxVQUFBb0MsZUFDQUssS0FBQSxpQkFBQXpDLFVBQUFxQyxhQU1BTSxJQUFBLEdBQUE1QyxNQUFBdUMsT0FBQUEsU0FBQU0sT0FBQSIsImZpbGUiOiJhcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gYXBwLmpzIHdpbGwgYmUgdGhlIGphdmFzY3JpcHQgZmlsZVxuLy8gZm9yIHRoZSBtYWluIGFwcCBmdW5jdGlvbnMgKG5vbi1kb20pXG5cbi8vIEluaXRpYWxpemUgRmlyZWJhc2VcblxudmFyIGNvbmZpZyA9IHtcbiAgICBhcGlLZXk6IFwiQUl6YVN5QTZtd3dyR1pMWFRyUFpjb3RhZGJQbGE3TWZTTlJ5dlU4XCIsXG4gICAgYXV0aERvbWFpbjogXCJjb2RpbmcxMDEtZTdlZjAuZmlyZWJhc2VhcHAuY29tXCIsXG4gICAgZGF0YWJhc2VVUkw6IFwiaHR0cHM6Ly9jb2RpbmcxMDEtZTdlZjAuZmlyZWJhc2Vpby5jb21cIixcbiAgICBzdG9yYWdlQnVja2V0OiBcImNvZGluZzEwMS1lN2VmMC5hcHBzcG90LmNvbVwiXG59O1xuXG5maXJlYmFzZS5pbml0aWFsaXplQXBwKGNvbmZpZyk7XG5cbi8vIFNhbXBsZSBjb2RlIHRvIGNyZWF0ZSBhIHRyYWNrIG9uIGZpcmViYXNlXG5cbi8vIHZhciBfdHJhY2tzID0gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoJ3RyYWNrcycpO1xuLy8gdmFyIF9uZXdUcmFjayA9IF90cmFja3MucHVzaCgpO1xuLy9cbi8vIF9uZXdUcmFjay5zZXQoe1xuLy8gXHRuYW1lOiAnU2FtcGxlIFRyYWNrJyxcbi8vIFx0c2x1ZzogJ3NhbXBsZS10cmFjaycsXG4vLyBcdHJlc291cmNlczogW11cbi8vIH0pO1xuXG4vLyBDb21wb25lbnRzXG5cbnZhciBUcmFja0xpc3QgPSBWdWUuY29tcG9uZW50KCdUcmFja0xpc3QnLCB7XG4gICAgdGVtcGxhdGU6ICcjVHJhY2tMaXN0JyxcbiAgICBkYXRhOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRyYWNrczogbnVsbFxuICAgICAgICB9XG4gICAgfSxcbiAgICB3YXRjaDoge1xuICAgICAgICAnJHJvdXRlJzogJ2ZldGNoRGF0YSdcbiAgICB9LFxuICAgIGNyZWF0ZWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmZldGNoRGF0YSgpXG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICAgIGZldGNoRGF0YTogZnVuY3Rpb24oKSB7XG4gICAgICAgIFx0dmFyICR0aGlzID0gdGhpcztcbiAgICAgICAgICAgIHZhciB0cmFja3MgPSBbXTtcbiAgICAgICAgICAgIGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCd0cmFja3MnKS5vbigndmFsdWUnLCBmdW5jdGlvbihzbmFwc2hvdCkge1xuICAgICAgICAgICAgICAgICR0aGlzLnRyYWNrcyA9IHNuYXBzaG90LnZhbCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG5cblxuICAgIH1cbn0pO1xuXG52YXIgVHJhY2sgPSBWdWUuY29tcG9uZW50KCdUcmFjaycsIHtcbiAgICB0ZW1wbGF0ZTogJyNUcmFjaycsXG4gICAgZGF0YTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0cmFja05hbWU6ICcnLFxuICAgICAgICAgICAgdHJhY2tTbHVnOiAnJyxcbiAgICAgICAgICAgIHRyYWNrUmVzb3VyY2U6ICcnLFxuICAgICAgICAgICAgdHJhY2tSZXNvdXJjZVR3bzogJycsXG4gICAgICAgICAgICB0cmFja0RldGFpbHM6ICcnLFxuICAgICAgICB9XG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICAgIHRyYWNrU3VibWl0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX3RyYWNrcyA9IGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCd0cmFja3MnKTtcbiAgICAgICAgICAgIHZhciBfbmV3VHJhY2sgPSBfdHJhY2tzLnB1c2goKTtcblxuICAgICAgICAgICAgdmFyIHRyYWNrU2x1ZyA9IHRoaXMudHJhY2tOYW1lLnJlcGxhY2UoL1xccysvZywgJy0nKS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICAgICAgICBfbmV3VHJhY2suc2V0KHtcbiAgICAgICAgICAgIFx0bmFtZTogdGhpcy50cmFja05hbWUsXG4gICAgICAgICAgICAgICAgc2x1ZzogdHJhY2tTbHVnLFxuICAgICAgICAgICAgXHRkZXRhaWxzOiB0aGlzLnRyYWNrRGV0YWlscyxcbiAgICAgICAgICAgIFx0cmVzb3VyY2VzOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbms6IHRoaXMudHJhY2tSZXNvdXJjZVxuXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmt0d286IHRoaXMudHJhY2tSZXNvdXJjZVR3b1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy8nKVxuXG5cbiAgICAgICAgfVxuICAgIH1cbn0pO1xuXG52YXIgUXVlc3Rpb25MaXN0ID0gVnVlLmNvbXBvbmVudCgnUXVlc3Rpb25MaXN0Jywge1xuICAgIHRlbXBsYXRlOiAnI1F1ZXN0aW9uTGlzdCdcbn0pO1xuXG52YXIgUXVlc3Rpb24gPSBWdWUuY29tcG9uZW50KCdRdWVzdGlvbicsIHtcbiAgICB0ZW1wbGF0ZTogJyNRdWVzdGlvbidcbn0pO1xuXG4vLyBSb3V0ZXNcblxudmFyIHJvdXRlciA9IG5ldyBWdWVSb3V0ZXIoe1xuICAgIHJvdXRlczogW1xuICAgICAgICB7IHBhdGg6ICcvJywgcmVkaXJlY3Q6ICcvdHJhY2tzJyB9LFxuICAgICAgICB7IHBhdGg6ICcvdHJhY2tzJywgY29tcG9uZW50OiBUcmFja0xpc3QgfSxcbiAgICAgICAgeyBwYXRoOiAnL3RyYWNrcy86aWQnLCBjb21wb25lbnQ6IFRyYWNrIH0sXG4gICAgICAgIHsgcGF0aDogJy9xdWVzdGlvbnMnLCBjb21wb25lbnQ6IFF1ZXN0aW9uTGlzdCB9LFxuICAgICAgICB7IHBhdGg6ICcvcXVlc3Rpb25zLzppZCcsIGNvbXBvbmVudDogUXVlc3Rpb24gfVxuICAgIF1cbn0pO1xuXG4vLyBJbml0aWFsaXplIFZ1ZVxuXG52YXIgYXBwID0gbmV3IFZ1ZSh7IHJvdXRlcjogcm91dGVyIH0pLiRtb3VudCgnI2FwcCcpO1xuIl19
